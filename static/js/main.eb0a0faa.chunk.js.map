{"version":3,"sources":["components/PizzaTypePicker.jsx","components/PizzaCounter.jsx","components/PizzaExtrasPicker.jsx","components/PizzaSumUpList.jsx","components/PizzaShoppingBasket.jsx","App.js","reportWebVitals.js","index.js"],"names":["PizzaTypePicker","avaiablePizzas","onPizzaSelectionChange","handleChange","event","target","value","map","pizza","type","id","name","checked","isChecked","onChange","PizzaCounter","counterValue","onPizzaCounterChange","min","PizzaExtrasPicker","extras","avaiableExtras","onExtraSelected","item","PizzaSumUpList","selectedPizza","selectedPizzaCount","onAddToBasket","calculatePrice","count","price","parseInt","length","onClick","basketObject","totalPrice","PizzaShoppingBasket","pizzasInBasket","onPizzaRemoved","extra","pizzaId","App","props","handlePizzaSelectionChange","selectedPizzaId","state","find","x","setState","handleExtraSelectionChanged","selectedExtrasId","handlePizzaCounterChanged","pizzaCount","countOfPizza","handleAddToBasket","newBasketObjectId","Math","max","handlePizzaRemoved","pizzaInBasketId","filter","handleOrderSubmit","baseState","alert","calculateTotalPrice","reduce","a","b","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb0a0faa.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function PizzaTypePicker({\r\n  avaiablePizzas,\r\n  onPizzaSelectionChange,\r\n}) {\r\n  const handleChange = (event) => {\r\n    onPizzaSelectionChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>Vyberte pizu: </h3>\r\n        {avaiablePizzas.map((pizza) => (\r\n          <label key={pizza.id}>\r\n            <input\r\n              type=\"radio\"\r\n              value={pizza.id}\r\n              name=\"pizza\"\r\n              checked={pizza.isChecked}\r\n              onChange={handleChange}\r\n            />\r\n            {pizza.value}\r\n            <br />\r\n          </label>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// console.log(\r\n//   event.target.value,\r\n//   event.target.getAttribute(\"data-price\"),\r\n//   event.target.dataset.price,\r\n//   event.target.text\r\n// );\r\n\r\n// return (\r\n//   <div onChange={handleChange}>\r\n//     <h3>Vyberte pizu: </h3>\r\n//     <input type=\"radio\" value=\"Herkulova - rajčata, oregano, eidam, herkules\" name=\"pizza\" data-price=\"150\" />\r\n//     Herkulova - rajčata, oregano, eidam, herkules\r\n//     <br />\r\n//     <input type=\"radio\" value=\"syrova\" name=\"pizza\" data-price=\"150\" />\r\n//     Sýrová - rajčata, oregano, eidam, niva, uzený sýr, hermelín, mozzarella\r\n//     <br />\r\n//     <input type=\"radio\" value=\"extra-paliva\" name=\"pizza\" data-price=\"150\" />\r\n//     Extra pálivá - rajčata, oregano, eidam, ang.slan., klobása, chilli,\r\n//     feferony\r\n//     <br />\r\n//     <input type=\"radio\" value=\"kureci\" name=\"pizza\" data-price=\"150\" />\r\n//     Kuřecí - rajčata, oregano, kuřecí maso, ang.slan., smetana, kukuřice,\r\n//     pórek\r\n//     <br />\r\n//     <input type=\"radio\" value=\"zahradnikova\" name=\"pizza\" data-price=\"150\" />\r\n//     Zahradníkova - rajčata, oregano, pórek, hrášek, kukuřice, eidam, uz.sýr,\r\n//     olivy\r\n//     <br />\r\n//     <input type=\"radio\" value=\"pekelna\" name=\"pizza\" data-price=\"150\" />\r\n//     Pekelná - rajčata, oregano, fazole, anglická, klobása, feferony, chilli,\r\n//     česnek\r\n//     <br />\r\n//     <input type=\"radio\" value=\"sladka\" name=\"pizza\" data-price=\"150\" />\r\n//     Sladká - džem, ananas, smetana, čokoláda, cukr\r\n//     <br />\r\n//   </div>\r\n// );\r\n","import React from \"react\";\r\n\r\nexport default function PizzaCounter({ counterValue, onPizzaCounterChange }) {\r\n  const handleChange = (event) => {\r\n    onPizzaCounterChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Zadejte počet kusů:</h3>\r\n      <input\r\n        type=\"number\"\r\n        min=\"0\"\r\n        value={counterValue}\r\n        onChange={handleChange}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n//https://dev.to/mhmmdysf/handling-multiple-checkboxes-in-react-3efe\r\nexport default function PizzaExtrasPicker({\r\n  avaiableExtras: extras,\r\n  onExtraSelected,\r\n}) {\r\n  const handleChange = (event) => {\r\n    onExtraSelected(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Vyberte, co máme přidat: </h3>\r\n\r\n      <div>\r\n        {extras.map((item) => (\r\n          <label key={item.id}>\r\n            <input\r\n              value={item.id}\r\n              type=\"checkbox\"\r\n              checked={item.isChecked}\r\n              onChange={handleChange}\r\n            />\r\n            {item.value}\r\n            <br />\r\n          </label>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n<></>;\r\n","import React from \"react\";\r\n\r\nexport default function PizzaSumUpList({\r\n  selectedPizza,\r\n  extras,\r\n  selectedPizzaCount,\r\n  onAddToBasket,\r\n}) {\r\n  let calculatePrice = (count, price) => {\r\n    return parseInt(count) * parseInt(price);\r\n  };\r\n\r\n  let createBasketObject = () => {\r\n    let basketObject = {\r\n      ...selectedPizza,\r\n      id: 0,\r\n      extras,\r\n      totalPrice: calculatePrice(selectedPizzaCount, selectedPizza.price),\r\n    };\r\n    onAddToBasket(basketObject);\r\n  };\r\n\r\n  if (selectedPizza === null) {\r\n    return <h3>Prosím vyberte pizzu...</h3>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>Vámi vybraná pizza:</h3>\r\n        <p>{selectedPizza.value}</p>\r\n        <h4>Extra suroviny: </h4>\r\n        {extras.length > 0 ? (\r\n          extras.map((item) => <div key={item.id}>{item.value}</div>)\r\n        ) : (\r\n          <div>Nevybrali jste žádné extra suroviny</div>\r\n        )}\r\n        {selectedPizzaCount > 0 ? (\r\n          <div>\r\n            <div>{selectedPizzaCount} ks</div>\r\n            <div>\r\n              {calculatePrice(selectedPizzaCount, selectedPizza.price)}\r\n              ,- kč\r\n            </div>\r\n            <button onClick={createBasketObject}>Přidat do košíku</button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <strong>Zadejte počet kusů</strong>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function PizzaShoppingBasket({\r\n  pizzasInBasket,\r\n  onPizzaRemoved,\r\n}) {\r\n  let handleClick = (pizzaId) => {\r\n    onPizzaRemoved(pizzaId);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Shrnutí objednávky</h3>\r\n      {pizzasInBasket.map((pizza) => (\r\n        <fieldset key={pizza.id}>\r\n          <div>{pizza.value}</div>\r\n          {pizza.extras.length > 0 &&\r\n            pizza.extras.map((extra) => (\r\n              <div key={extra.id}>{extra.value}</div>\r\n            ))}\r\n          <div>Cena: {pizza.totalPrice},- kč</div>\r\n          <button onClick={() => handleClick(pizza.id)}>Odebrat</button>\r\n        </fieldset>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport PizzaTypePicker from \"./components/PizzaTypePicker\";\nimport PizzaCounter from \"./components/PizzaCounter\";\nimport PizzaExtrasPicker from \"./components/PizzaExtrasPicker\";\nimport PizzaSumUpList from \"./components/PizzaSumUpList\";\nimport PizzaShoppingBasket from \"./components/PizzaShoppingBasket\";\n\n//https://ccv-vsb.github.io/pizza/pizza.html\n// https://dev.to/yuribenjamin/how-to-deploy-react-app-in-github-pages-2a1f\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      avaiablePizzas: [\n        {\n          id: 1,\n          value: \"Herkulova - rajčata, oregano, eidam, herkules\",\n          price: 150,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          value:\n            \"Sýrová - rajčata, oregano, eidam, niva, uzený sýr, hermelín, mozzarella\",\n          price: 200,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          value:\n            \"Extra pálivá - rajčata, oregano, eidam, ang.slan., klobása, chilli, feferony\",\n          price: 130,\n          isChecked: false,\n        },\n        {\n          id: 4,\n          value:\n            \"Kuřecí - rajčata, oregano, kuřecí maso, ang.slan., smetana, kukuřice, pórek\",\n          price: 170,\n          isChecked: false,\n        },\n        {\n          id: 5,\n          value:\n            \"Zahradníkova - rajčata, oregano, pórek, hrášek, kukuřice, eidam, uz.sýr, olivy\",\n          price: 165,\n          isChecked: false,\n        },\n        {\n          id: 6,\n          value:\n            \"Pekelná - rajčata, oregano, fazole, anglická, klobása, feferony, chilli, česnek\",\n          price: 122,\n          isChecked: false,\n        },\n        {\n          id: 7,\n          value: \"Sladká - džem, ananas, smetana, čokoláda, cukr\",\n          price: 190,\n          isChecked: false,\n        },\n      ],\n      extras: [\n        { id: 1, value: \"Kukuřice\", isChecked: false },\n        { id: 2, value: \"Niva\", isChecked: false },\n        { id: 3, value: \"Herkules\", isChecked: false },\n        { id: 4, value: \"Hermelín\", isChecked: false },\n        { id: 5, value: \"Kuřecí\", isChecked: false },\n        { id: 6, value: \"Jalapeños\", isChecked: false },\n      ],\n      selectedPizza: null,\n      selectedPizzaCount: 0,\n      pizzasInBasket: [],\n    };\n\n    // preserve the initial state in a new object\n    this.baseState = this.state;\n  }\n\n  handlePizzaSelectionChange = (selectedPizzaId) => {\n    let pizza = this.state.avaiablePizzas.find(\n      (x) => x.id === parseInt(selectedPizzaId)\n    );\n    this.setState((state, props) => {\n      return {\n        selectedPizza: pizza,\n        avaiablePizzas: state.avaiablePizzas.map((pizza) =>\n          pizza.id === parseInt(selectedPizzaId)\n            ? { ...pizza, isChecked: !pizza.isChecked }\n            : { ...pizza, isChecked: false }\n        ),\n      };\n    });\n  };\n\n  handleExtraSelectionChanged = (selectedExtrasId) => {\n    this.setState((state, props) => {\n      return {\n        extras: state.extras.map((item) =>\n          item.id === parseInt(selectedExtrasId)\n            ? { ...item, isChecked: !item.isChecked }\n            : item\n        ),\n      };\n    });\n  };\n\n  handlePizzaCounterChanged = (pizzaCount) => {\n    let countOfPizza = 0;\n    if (pizzaCount) {\n      countOfPizza = parseInt(pizzaCount);\n    }\n\n    this.setState({ selectedPizzaCount: countOfPizza });\n  };\n\n  handleAddToBasket = (basketObject) => {\n    let newBasketObjectId = 0;\n    this.state.pizzasInBasket.length === 0\n      ? (newBasketObjectId = 1)\n      : (newBasketObjectId =\n          Math.max(...this.state.pizzasInBasket.map((item) => item.id)) + 1);\n\n    basketObject.id = newBasketObjectId;\n    this.setState((state, props) => {\n      return {\n        pizzasInBasket: [...state.pizzasInBasket, basketObject],\n        selectedPizza: null,\n        selectedPizzaCount: 0,\n        extras: state.extras.map((item) => {\n          return { ...item, isChecked: false };\n        }),\n        avaiablePizzas: state.avaiablePizzas.map((item) => {\n          return { ...item, isChecked: false };\n        }),\n      };\n    });\n  };\n\n  handlePizzaRemoved = (pizzaInBasketId) => {\n    this.setState((state, props) => {\n      return {\n        pizzasInBasket: state.pizzasInBasket.filter(\n          (item) => item.id !== parseInt(pizzaInBasketId)\n        ),\n      };\n    });\n  };\n\n  handleOrderSubmit = () => {\n    this.setState(this.baseState);\n    alert(\n      `Vaše objednávka za ${this.calculateTotalPrice()},- kč byla odeslána. `\n    );\n  };\n\n  calculateTotalPrice = () => {\n    return this.state.pizzasInBasket\n      .map((pizza) => pizza.totalPrice)\n      .reduce((a, b) => a + b, 0);\n  };\n\n  render() {\n    return (\n      <div>\n        <fieldset>\n          <legend>\n            <h2>Vylaďte si svou pizzu:</h2>\n          </legend>\n          <PizzaTypePicker\n            avaiablePizzas={this.state.avaiablePizzas}\n            onPizzaSelectionChange={this.handlePizzaSelectionChange}\n          />\n          <PizzaCounter\n            counterValue={this.state.selectedPizzaCount}\n            onPizzaCounterChange={this.handlePizzaCounterChanged}\n          />\n          <PizzaExtrasPicker\n            avaiableExtras={this.state.extras}\n            onExtraSelected={this.handleExtraSelectionChanged}\n          />\n          <PizzaSumUpList\n            selectedPizza={this.state.selectedPizza}\n            extras={this.state.extras.filter((x) => x.isChecked)}\n            selectedPizzaCount={this.state.selectedPizzaCount}\n            onAddToBasket={this.handleAddToBasket}\n          />\n          {this.state.pizzasInBasket.length > 0 && (\n            <div>\n              <PizzaShoppingBasket\n                pizzasInBasket={this.state.pizzasInBasket}\n                onPizzaRemoved={this.handlePizzaRemoved}\n              />\n              <h3>\n                Celková cena:\n                {this.calculateTotalPrice()}\n                ,- kč\n              </h3>\n              <button onClick={this.handleOrderSubmit}>\n                Odeslat objednávku\n              </button>\n            </div>\n          )}\n        </fieldset>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}